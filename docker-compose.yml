version: "3.9"

services:
  # This service runs the Rasa chatbot
  rasa:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5005:5005"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      action_server:
        condition: service_started

  action_server:
    build:
      context: .
      dockerfile: actions/Dockerfile
    ports:
      - "5055:5055"
    env_file:
      - .env
    command: rasa run actions
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14.1
    restart: always
    # No need to expose the port to the host in a production network
    # ports:
    #   - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0
    # No need to expose the port to the host in a production network
    # ports:
    #   - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.9-management
    ports:
      - "15672:15672" # Expose management UI for monitoring
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 15s
      retries: 5

  web_ui:
    build: ./frontend
    ports:
      - "8080:80"

volumes:
  postgres_data: